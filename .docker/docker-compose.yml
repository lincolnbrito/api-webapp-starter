version: '2'
services:
  #============ API ================
  api:    
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    image: lincolnbrito/api
    environment:
      CONTAINER_ENV: "${API_ENV}"
      XDEBUG_HOST: "${XDEBUG_HOST}"
      WWWUSER: "${WWWUSER}"
    volumes:
     - ${API_DIR}/:/var/www/html
     - ${COMPOSER_CACHE_DIR}:${COMPOSER_CACHE_DIR_CONTAINER}
    ports:
     - "${API_PORT}:80"   
    networks:
     - sdnet
  #============ NODE-VUE-CLI ================
  node-vue-cli:    
    build:
      context: ./node-vue-cli
      dockerfile: Dockerfile
    command: yarn run start
    restart: always
    image: lincolnbrito/node-vue-cli 
    volumes:
     - ${WEBAPP_VUE_DIR}/:/var/www/html
     - ${YARN_CACHE_DIR}/:${YARN_CACHE_DIR_CONTAINER}
    ports:
     - "${WEBAPP_VUE_PORT}:8080"
     - "35729:35729"
     - '3000:3000'
    networks:
     - sdnet
  #============ NODE-ANGULAR-CLI ================   
  node-angular-cli:    
    build:
      context: ./node-angular-cli
      dockerfile: Dockerfile
    command: ng serve --host 0.0.0.0 -lr --poll 200
    restart: always
    image: lincolnbrito/node-angular-cli 
    volumes:
     - ${WEBAPP_ANGULAR_DIR}/:/var/www/html
     - ${YARN_CACHE_DIR}/:${YARN_CACHE_DIR_CONTAINER}  
    ports:
     - "${WEBAPP_ANGULAR_PORT}:4200"
     - "49153:49153"
     - '3000:3000' 
    networks:
     - sdnet
  #============ MYSQL ================   
  mysql:
    image: mysql:5.7
    env_file: .env
    ports:
     - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    volumes:
     - ${VOLUME_DATA_PATH}/mysql:/var/lib/mysql
     # - ./docker/mysql/conf.d:/etc/mysql/conf.d
     # - ./docker/mysql/logs:/var/log/mysql
    networks:
     - sdnet
  #============ REDIS ================
  redis:
    image: redis:alpine
    env_file: ./.env
    volumes:
     - ${VOLUME_DATA_PATH}/redis:/data
    networks:
     - sdnet
networks:
  sdnet:
    driver: "bridge"
volumes:
  mysqldata:
    driver: "local"
  redisdata:
    driver: "local"