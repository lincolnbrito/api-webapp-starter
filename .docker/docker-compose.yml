version: '2'
services:
  api:    
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    image: lincolnbrito/api
    environment:
      CONTAINER_ENV: "${API_ENV}"
      XDEBUG_HOST: "${XDEBUG_HOST}"
      WWWUSER: "${WWWUSER}"
    volumes:
     - ${API_DIR}/:/var/www/html
    ports:
     - "${API_PORT}:80"   
    networks:
     - sdnet
  # webapp-vue:    
  #   build:
  #     context: ./webapp
  #     dockerfile: Dockerfile-vue
  #   command: yarn run start
  #   restart: always
  #   image: lincolnbrito/webapp-vue  
  #   volumes:
  #    - ${WEBAPP_VUE_DIR}/:/var/www/html     
  #   ports:
  #    - "${WEBAPP_VUE_PORT}:8080"
  #    - "35729:35729"
  #    - '3000:3000'
  #   networks:
  #    - sdnet
  # webapp-angular:    
  #   build:
  #     context: ./webapp
  #     dockerfile: Dockerfile-angular
  #   command: ng serve --host 0.0.0.0 -lr --poll 200
  #   restart: always
  #   image: lincolnbrito/webapp-angular 
  #   volumes:
  #    - ${WEBAPP_ANGULAR_DIR}/client/:/var/www/html     
  #   ports:
  #    - "${WEBAPP_ANGULAR_PORT}:4200"
  #    - "49153:49153"
  #    - '3000:3000' 
  #   networks:
  #    - sdnet
  mysql:
    image: mysql:5.7
    env_file: .env
    ports:
     - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    volumes:
     - ${VOLUME_DATA_PATH}/mysql:/var/lib/mysql
    networks:
     - sdnet
  # redis:
  #   image: redis:alpine
  #   env_file: ./.env
  #   volumes:
  #    - ${VOLUME_DATA_PATH}/redis:/data
  #   networks:
  #    - sdnet
networks:
  sdnet:
    driver: "bridge"
volumes:
  mysqldata:
    driver: "local"
  redisdata:
    driver: "local"